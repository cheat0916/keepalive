name: Keepalive

on:
  schedule:
    - cron: '*/10 * * * *' # ÊØè10ÂàÜÈíüÊâßË°å‰∏ÄÊ¨°
  workflow_dispatch:

jobs:
  keepalive:
    runs-on: ubuntu-24.04

    env:
      TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
      TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Restore fail_counts cache
        uses: actions/cache@v3
        with:
          path: fail_counts.txt
          key: fail-counts-Linux-v1
          restore-keys: |
            fail-counts-Linux-

      - name: Run Keepalive script
        run: |
          set -e

          URLS=(
            "https://nezha-cheat0916.koyeb.app/"
            # ÂèØÊ∑ªÂä†Êõ¥Â§ö URL
          )

          MAX_RETRY=2
          FAIL_FILE="fail_counts.txt"
          LAST_REPORT_FILE=".last_daily_report"
          DAYS_KEEP=7
          PARALLEL=5
          MAX_FAIL_MSG=5

          [ -f "$FAIL_FILE" ] || > "$FAIL_FILE"
          [ -f "$LAST_REPORT_FILE" ] || > "$LAST_REPORT_FILE"

          NOW=$(date +%s)
          TODAY=$(date '+%Y-%m-%d')

          declare -A FAIL_COUNTS
          while IFS=" " read -r url count timestamp; do
            timestamp=${timestamp:-$NOW}
            DIFF=$(( (NOW - timestamp) / 86400 ))
            [ $DIFF -le $DAYS_KEEP ] && FAIL_COUNTS["$url"]=$count
          done < "$FAIL_FILE"

          IS_DAILY_REPORT=false
          HOUR_BEIJING=$(( $(date -u +%H) + 8 ))
          LAST_SENT=$(cat "$LAST_REPORT_FILE" 2>/dev/null || echo "")
          if [ $HOUR_BEIJING -ge 9 ] && [ $HOUR_BEIJING -le 11 ] && [ "$LAST_SENT" != "$TODAY" ]; then
            IS_DAILY_REPORT=true
            echo "$TODAY" > "$LAST_REPORT_FILE"
          fi

          REPORT="üìã *ÊØèÊó•ÂÅ•Â∫∑ÁÆÄÊä•*\nÊó∂Èó¥: $(date '+%Y-%m-%d %H:%M:%S')\n\n"
          FAIL_MESSAGES=()
          FAIL_COUNT=0

          check_url() {
            local url="$1"
            local status
            local retry=0
            status=$(curl -s -o /dev/null -w "%{http_code}" "$url")
            while [ "$status" != "200" ] && [ $retry -lt $MAX_RETRY ]; do
              sleep 5
              status=$(curl -s -o /dev/null -w "%{http_code}" "$url")
              ((retry++))
            done

            if [ "$status" != "200" ]; then
              FAIL_COUNTS["$url"]=$(( ${FAIL_COUNTS["$url"]:-0} + 1 ))
              echo "‚ùå $url failed (${FAIL_COUNTS["$url"]} Ê¨°ËøûÁª≠Â§±Ë¥•)"
              REPORT+="‚ùå $url  (Áä∂ÊÄÅÁ†Å: $status, ËøûÁª≠Â§±Ë¥• ${FAIL_COUNTS["$url"]} Ê¨°)\n"

              if [ "${FAIL_COUNTS["$url"]}" -ge 3 ] && [ "$IS_DAILY_REPORT" = false ]; then
                ((FAIL_COUNT++))
                if [ $FAIL_COUNT -le $MAX_FAIL_MSG ]; then
                  FAIL_MESSAGES+=("‚ö†Ô∏è ‰øùÊ¥ªÂ§±Ë¥•ÔºàËøûÁª≠ ${FAIL_COUNTS["$url"]} Ê¨°Ôºâ\nURL: $url\nÁä∂ÊÄÅÁ†Å: $status\nÊó∂Èó¥: $(date '+%Y-%m-%d %H:%M:%S')")
                fi
              fi
            else
              FAIL_COUNTS["$url"]=0
              echo "‚úÖ $url is UP"
              REPORT+="‚úÖ $url  (Áä∂ÊÄÅÁ†Å: $status)\n"
            fi
          }

          # ‰ΩøÁî® & Âπ∂Ë°åË∞ÉÁî®ÔºåÂπ∂ÈôêÂà∂Âπ∂ÂèëÊï∞Èáè
          semaphores=0
          for url in "${URLS[@]}"; do
            check_url "$url" &
            ((semaphores++))
            if [ $semaphores -ge $PARALLEL ]; then
              wait
              semaphores=0
            fi
          done
          wait

          > "$FAIL_FILE"
          for url in "${!FAIL_COUNTS[@]}"; do
            printf "%s %d %d\n" "$url" "${FAIL_COUNTS[$url]}" "$NOW" >> "$FAIL_FILE"
          done

          if [ ${#FAIL_MESSAGES[@]} -gt 0 ]; then
            REMAINING=$((FAIL_COUNT - MAX_FAIL_MSG))
            MSG_TEXT=$(printf "%s\n\n" "${FAIL_MESSAGES[@]}")
            if [ $REMAINING -gt 0 ]; then
              MSG_TEXT+="...ËøòÊúâ $REMAINING Êù°Â§±Ë¥•Êú™ÊòæÁ§∫"
            fi
            curl -s -X POST "https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage" \
              -d chat_id="${TELEGRAM_CHAT_ID}" \
              -d text="$MSG_TEXT" \
              -d parse_mode="Markdown"
          fi

          if [ "$IS_DAILY_REPORT" = true ]; then
            curl -s -X POST "https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage" \
              -d chat_id="${TELEGRAM_CHAT_ID}" \
              -d text="$REPORT" \
              -d parse_mode="Markdown"

      - name: Save fail_counts cache
        uses: actions/cache@v3
        with:
          path: fail_counts.txt
          key: fail-counts-Linux-v1
