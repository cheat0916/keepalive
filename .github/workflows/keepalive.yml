name: Keepalive

on:
  schedule:
    - cron: '*/15 * * * *' # 每 15 分钟运行一次
  workflow_dispatch: # 可支持手动触发

jobs:
  keepalive:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Run Keepalive script
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        run: |
          set -e

          URLS=(
            "https://nezha-cheat0916.koyeb.app/"
            # 可以添加更多 URL
          )

          MAX_RETRY=2
          FAIL_FILE="fail_counts.txt"
          DAYS_KEEP=7

          # 如果缓存文件不存在则创建
          if [ ! -f "$FAIL_FILE" ]; then
            > "$FAIL_FILE"
          fi

          # 当前时间戳
          NOW=$(date +%s)

          # 将失败次数加载到关联数组，只保留最近 7 天内的记录
          declare -A FAIL_COUNTS
          while IFS=" " read -r url count timestamp; do
            if [ -z "$timestamp" ]; then
              timestamp=$NOW
            fi
            DIFF=$(( (NOW - timestamp) / 86400 ))
            if [ $DIFF -le $DAYS_KEEP ]; then
              FAIL_COUNTS["$url"]=$count
            fi
          done < "$FAIL_FILE"

          # 判断是否生成每日报告（中国时间 10:00 对应 UTC 02:00）
          IS_DAILY_REPORT=false
          if [ "$(date -u +%H:%M)" == "02:00" ]; then
            IS_DAILY_REPORT=true
          fi

          REPORT="📋 *每日健康简报*\n时间: $(date '+%Y-%m-%d %H:%M:%S')\n\n"

          # 并发检查每个 URL
          for url in "${URLS[@]}"; do
          (
            STATUS=$(curl -s -o /dev/null -w "%{http_code}" "$url")
            RETRY=0
            while [ "$STATUS" != "200" ] && [ $RETRY -lt $MAX_RETRY ]; do
              sleep 5
              STATUS=$(curl -s -o /dev/null -w "%{http_code}" "$url")
              ((RETRY++))
            done

            if [ "$STATUS" != "200" ]; then
              FAIL_COUNTS["$url"]=$(( ${FAIL_COUNTS["$url"]:-0} + 1 ))
              echo "❌ $url failed (${FAIL_COUNTS["$url"]} times in a row)"

              # Telegram 失败提醒（非日报）
              if [ "${FAIL_COUNTS["$url"]}" -ge 3 ] && [ "$IS_DAILY_REPORT" = false ]; then
                MESSAGE="⚠️ 保活失败（连续 ${FAIL_COUNTS["$url"]} 次）\nURL: $url\n状态码: $STATUS\n时间: $(date '+%Y-%m-%d %H:%M:%S')"
                curl -s -X POST "https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage" \
                  -d chat_id="${TELEGRAM_CHAT_ID}" \
                  -d text="$MESSAGE" \
                  -d parse_mode="Markdown"
              fi

              REPORT+="❌ $url  (状态码: $STATUS, 连续失败 ${FAIL_COUNTS["$url"]} 次)\n"
            else
              FAIL_COUNTS["$url"]=0
              echo "✅ $url is UP"
              REPORT+="✅ $url  (状态码: $STATUS)\n"
            fi
          ) &
          done
          wait

          # 保存失败次数和时间戳
          > "$FAIL_FILE"
          for url in "${!FAIL_COUNTS[@]}"; do
            printf "%s %d %d\n" "$url" "${FAIL_COUNTS[$url]}" "$NOW" >> "$FAIL_FILE"
          done

          # 每日简报发送
          if [ "$IS_DAILY_REPORT" = true ]; then
            curl -s -X POST "https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage" \
              -d chat_id="${TELEGRAM_CHAT_ID}" \
              -d text="$REPORT" \
              -d parse_mode="Markdown"
          fi
